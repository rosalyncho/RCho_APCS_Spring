package textExcel;

// Update this file with your own code.

public class Spreadsheet implements Grid
{
	
	private Cell[][] excelSpreadsheet = new Cell[getRows()][getCols()];
	
	public Spreadsheet(){
		//make array with empty cell objects
		for(int i = 0; i < 20; i++){
			for(int j = 0; j < 12; j++){
				excelSpreadsheet[i][j] = new EmptyCell();
			}
		}
	}
	
	@Override
	public String processCommand(String command)
	{  	
		String[] splitted = command.split(" ");
		//if there is no command
		if(splitted.equals("")){
			return "";
		}
		//if command is clear
		else if(splitted.length==1 && splitted[0].toLowerCase().equals("clear")){
			for(int i = 0; i < excelSpreadsheet.length; i++){
				for(int j = 0; j < excelSpreadsheet[i].length; j++){
					excelSpreadsheet[i][j] = new EmptyCell();
				}
			}
			return getGridText();
		}
		//if command is for example "clear A1"
		else if(splitted.length == 2 && splitted[0].toLowerCase().equals("clear")){
			int row = splitted[1].charAt(0) - 'A';
			int col = Integer.parseInt(splitted[1].substring(1));
			
			excelSpreadsheet[row][col] = new EmptyCell();
			return getGridText();
		}
		//if command is for example "A1 = "hello""
		else if(command.contains("=")){ // FIX THIS SHIT
			int row = splitted[0].charAt(0) - 'A';
			int col = Integer.parseInt(splitted[0].substring(1));
			
			excelSpreadsheet[row][col] = new TextCell(splitted[2]);
			return getGridText();
		}
		return null;
	}
	
	@Override
	public int getRows()
	{
		return 20;
	}

	@Override
	public int getCols()
	{
		return 12;
	}

	@Override
	public Cell getCell(Location loc)
	{
		return excelSpreadsheet[loc.getRow()][loc.getCol()];
	}

	@Override
	public String getGridText()
	{
		String grid = "   |";
		for (char i = 'A'; i<='L'; i++) {
			grid += i + "         |";
		}
		String rowLabel = "\n";
		for (int row = 0; row < 20; row++) {
			if (row < 9) {
				rowLabel += (row+1) + "  |";
			} else {
				rowLabel += (row+1) + " |";
			}
			for(int column = 0; column <12; column++){
				rowLabel += excelSpreadsheet[row][column].abbreviatedCellText() + "|";
			}
			rowLabel += "\n";
			}
		return grid + rowLabel;
	}
}
