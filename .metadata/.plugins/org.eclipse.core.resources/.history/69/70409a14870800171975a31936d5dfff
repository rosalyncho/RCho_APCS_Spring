package textExcel;

// Update this file with your own code.

public class Spreadsheet implements Grid
{
	
	private Cell[][] excelSpreadsheet = new Cell[20][12];
	
	public Spreadsheet(){
		//make array with empty cell objects
		for(int i = 0; i < 20; i++){
			for(int j = 0; j < 12; j++){
				excelSpreadsheet[i][j] = new EmptyCell();
			}
		}
	}
	@Override
	public String processCommand(String command)
	{  	
		String[] splitted = command.split(" ");
		//if there is no command
		if(splitted.equals("")){
			return "";
		}
		//if command is clear
		if(command.toLowerCase().equals("clear")){
			for(int i = 0; i < 20; i++){
				for(int j = 0; j < 12; j++){
					excelSpreadsheet[i][j] = new EmptyCell();
				}
			}
			return getGridText();
		}
		//if command is for example "clear A1"
		if(command.toLowerCase().contains("clear ")){
			String locationToChange = splitted[1];
			SpreadsheetLocation location = new SpreadsheetLocation(locationToChange);
			this.excelSpreadsheet[location.getRow()][location.getCol()] = new EmptyCell();
			return getGridText();
		}
		//if command is for example "A1 = "hello""
		if(command.contains("=")){ // FIX THIS SHIT
			String[] splitCommand = command.split(" = ");
			String commandLocation = splitCommand[0];
			String commandValue = splitCommand[1];
			// in case there are two equal signs // NEED THIS SHIT
			if(splitCommand.length > 2){
				commandValue += " = " + splitCommand[2];
				System.out.println(commandValue);
			}
			//remove quotes so value in cell will not be quoted // NEED THIS SHIT TOO
			if(commandValue.contains("\"")){
				commandValue = commandValue.replace("\"", "");
			}
			
			SpreadsheetLocation location = new SpreadsheetLocation(commandLocation);
			this.excelSpreadsheet[location.getRow()][location.getCol()] = new TextCell(commandValue);
	    	return getGridText();
		}
		SpreadsheetLocation location = new SpreadsheetLocation(command);
		return this.excelSpreadsheet[location.getRow()][location.getCol()].fullCellText();
	}
	
	@Override
	public int getRows()
	{
		return 20;
	}

	@Override
	public int getCols()
	{
		return 12;
	}

	@Override
	public Cell getCell(Location loc)
	{
		return this.excelSpreadsheet[loc.getRow()][loc.getCol()];
	}

	@Override
	public String getGridText()
	{
		String grid = "   |";
		for(char i = 'A'; i<='L'; i++){
			grid += i + "         |";
		}
		String rowLabel = "\n";
		for(int row = 0; row < 20; row++){
			if(row<9){
				rowLabel += (row+1) + "  |";
			}else{
				rowLabel += (row+1) + " |";
			}
			for(int column = 0; column <12; column++){
				rowLabel += excelSpreadsheet[row][column].abbreviatedCellText() + "|";
			}
		}
		return grid + rowLabel;
		}
}
