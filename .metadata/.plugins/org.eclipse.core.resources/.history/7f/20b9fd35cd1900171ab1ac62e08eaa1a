package textExcel;

public class FormulaCell extends RealCell{
	
	Cell[][] excelSpreadsheet = new Cell[20][12];
	
	public FormulaCell(String formula){
		super(formula);
	}
	
	public double getDoubleValue(){
		String input = getCellText();
		String[] splitted=input.split(" ");
		String cell = splitted[1].toUpperCase().substring(0, splitted[1].indexOf('-'));
		String ending = splitted[1].toUpperCase().substring(splitted[1].indexOf('-') + 1);
		if (splitted[0].toLowerCase().contains("sum")) {
		
		}
		if (splitted[0].toLowerCase().contains("avg")) {
			String changeCell = splitted[1].toUpperCase().substring(0, splitted[1].indexOf('-'));
			//sets value to one in case beginning and ending cells are already same
			double count = 1.0;
			
			//counts the number of cells looked at to correctly average
			while(!(changeCell.equals(ending))){
				
				SpreadsheetLocation loc = new SpreadsheetLocation (changeCell);
				
				//when rows are the same change column
				 if (changeCell.substring(1).equals(ending.substring(1))){
					 changeCell = ((char)(changeCell.charAt(0) + 1)) + cell.substring(1);

					if(excelSpreadsheet[loc.getRow()][loc.getCol()] instanceof RealCell){
						count++;
					}
				}else{
					//when rows aren't equal, move to next row
					changeCell = changeCell.charAt(0) + "" + (Integer.parseInt(changeCell.substring(1)) + 1);

					if(excelSpreadsheet[loc.getRow()][loc.getCol()] instanceof RealCell){
						count++;
					}
				}
			}
		}
		double first=Double.parseDouble(splitted[1]);
		for(int i=2;i<splitted.length-1;i+=2){
			double nextNum=Double.parseDouble(splitted[i+1]);
			if(splitted[i].equals("+")){	//addition
				first+=nextNum;
			}else if(splitted[i].equals("-")){	//subtraction
				first-=nextNum;
			}else if(splitted[i].equals("*")){	//multiplication
				first*=nextNum;
			}else if(splitted[i].equals("/")){	//division
				first/=nextNum;
			}
		}
		return first;				
	}
	
	@Override
	public String abbreviatedCellText() {
		
		return (getDoubleValue()+"            ").substring(0, 10);	
	}

	@Override
	public String fullCellText() {

		return getCellText();	//return the formula itself only with correct calculations
	}
}